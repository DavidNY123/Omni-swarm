<launch>
    <arg name="show" default="false" />
    <arg name="drone_id" default="1" />
    <arg name="viz" default="true" />
    <arg name="vins" default="false" />
    <arg name="detector" default="false" />
    <arg name="loop" default="false" />
    <arg name="bag" default="true" />
    <arg name="bag_path" default="$(env HOME)/bags/swarm_local_pc.bag" />
    <arg name="width" default="600" />
    <arg name="height" default="312" />

    <arg name="output_folder" default="false" />
    <arg name="config_file" default="$(env HOME)/bags/swarm_local_2020_12/Configs/SwarmConfig1/fisheye_ptgrey_n3/fisheye_cuda.yaml"/>

    <include file="$(find swarm_localization)/launch/loop-5-pc.launch" >
        <arg name="output" value="log" />
        <arg name="viz" value="$(arg viz)" />
        <arg name="cgraph_path" value="/root/output/graph.dot" />
    </include>

    <include file="$(find swarm_detector)/launch/detector.launch"  if="$(arg detector)" >
        <arg name="output" value="screen" />
        <arg name="show" value="true" />
        <arg name="drone_id" value="$(arg drone_id)" />
        <arg name="detect_duration" value="1.0" />
        <arg name="extrinsic_path" value="$(arg config_file)"/>
        <arg name="width" value="$(arg width)" />
        <arg name="swarm_fused" value="/swarm_drones/swarm_drone_fused_pc"/>
        <arg name="swarm_fused_relative" value="/swarm_drones/swarm_drone_fused_relative_pc"/>
        <arg name="enable_rear" value="false" />
    </include>

    <include file="$(find vins)/launch/fisheye_node.launch" if="$(arg vins)">
        <arg name="config_file" value="$(arg config_file)" />
        <arg name="output" value="log" />
    </include>

    <include file="$(find swarm_loop)/launch/loop-pc.launch" if="$(arg loop)">
        <arg name="output" value="log" />
        <arg name="show" value="false" />
        <arg name="width" value="$(arg width)" />
        <arg name="height" value="$(arg height)" />
        <arg name="superpoint_model_path" value="$(find swarm_loop)/models/superpoint_v1_rtx3080_$(arg height)x$(arg width)_fp16.trt" />
        <arg name="netvlad_model_path" value="$(find swarm_loop)/models/mobilenetvlad_$(arg height)x$(arg width)_rtx3080_fp16.trt" />
        <arg name="camera_config_path" value="$(find swarm_loop)/config/front-$(arg width).yaml" />
        <arg name="self_id" value="$(arg drone_id)" />
    </include>

    <group if="$(arg comm)">
        <include file="$(find localization_proxy)/launch/uwb_comm.launch">
            <arg name="output" value="log" />
            <arg name="sf_queue_max_size" value="40" />
        </include>

        <include file="$(find inf_uwb_ros)/launch/uwb_node.launch"> 
            <arg name="self_id" default="$(arg drone_id)" />
            <arg name="output" value="log" />
            <arg name="sim_latency" value="false" />
            <arg name="latency_buffer_size" value="5" />
        </include>
        <include file="$(find swarm_pilot)/launch/swarm_pilot.launch"> 
            <arg name="drone_id" default="$(arg drone_id)" />
            <arg name="output" default="log" />
        </include>
        <node name="gen_sim" type="gen_sim.py" pkg="swarm_pilot" />
    </group>

    <node pkg="rosbag" type="record" name="rosbag_record_local" 
        args='record -O $(arg bag_path) -a -x "/stereo/(.*)|/vins_estimator/flattened_(.*)"'
        if="$(arg bag)" />
    <param name="/use_sim_time" value="true" />
</launch>